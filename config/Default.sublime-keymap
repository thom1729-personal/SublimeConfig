[
    {
        "keys": [
            "primary+q"
        ],
        "command": "exit"
    },
    {
        "keys": [
            "primary+shift+o"
        ],
        "command": "prompt_open_folder"
    },
    {
        "keys": [
            "super+shift+e"
        ],
        "command": "reveal_in_file_manager"
    },
    {
        "keys": [
            "super+alt+t"
        ],
        "command": "open_current_directory_in_terminal"
    },
    {
        "keys": [
            "alt+shift+e"
        ],
        "command": "reveal_in_side_bar"
    },
    {
        "keys": [
            "f5"
        ],
        "command": "chain",
        "args": {
            "commands": [
                [
                    "status_message",
                    {
                        "message": "Refreshing folders."
                    }
                ],
                [
                    "refresh_folder_list",
                    null
                ]
            ]
        }
    },
    {
        "keys": [
            "ctrl+m"
        ],
        "command": "clone_file"
    },
    {
        "keys": [
            "ctrl+pageup"
        ],
        "command": "prev_view"
    },
    {
        "keys": [
            "ctrl+pagedown"
        ],
        "command": "next_view"
    },
    {
        "keys": [
            "ctrl+space"
        ],
        "command": "auto_complete"
    },
    {
        "keys": [
            "primary+v"
        ],
        "command": "paste_and_indent"
    },
    {
        "keys": [
            "primary+alt+v"
        ],
        "command": "paste"
    },
    {
        "keys": [
            "primary+shift+v"
        ],
        "command": "paste_from_history"
    },
    {
        "keys": [
            "ctrl+alt+i"
        ],
        "command": "increment",
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    {
        "keys": [
            "ctrl+backspace"
        ],
        "command": "delete_whitespace",
        "args": {
            "direction": "left"
        },
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": true,
                "match_all": true
            },
            {
                "key": "preceding_text",
                "operator": "regex_contains",
                "operand": "(^|\\s)$",
                "match_all": true
            }
        ]
    },
    {
        "keys": [
            "ctrl+delete"
        ],
        "command": "delete_whitespace",
        "args": {
            "direction": "right"
        },
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": true,
                "match_all": true
            },
            {
                "key": "following_text",
                "operator": "regex_contains",
                "operand": "^(\\s|$)",
                "match_all": true
            }
        ]
    },
    {
        "keys": [
            "enter"
        ],
        "command": "insert_snippet",
        "args": {
            "contents": "\n\t${0:$SELECTION}\n"
        },
        "context": [
            {
                "key": "in_brackets",
                "operator": "equal",
                "operand": true,
                "match_all": true
            },
            {
                "key": "preceding_text",
                "operator": "regex_contains",
                "operand": "\\S$",
                "match_all": true
            },
            {
                "key": "following_text",
                "operator": "regex_contains",
                "operand": "^\\S",
                "match_all": true
            }
        ]
    },
    {
        "keys": [
            " "
        ],
        "command": "insert_snippet",
        "args": {
            "contents": " ${0:$SELECTION} "
        },
        "context": [
            {
                "key": "in_brackets",
                "operator": "equal",
                "operand": true,
                "match_all": true
            },
            {
                "key": "preceding_text",
                "operator": "regex_contains",
                "operand": "\\S$",
                "match_all": true
            },
            {
                "key": "following_text",
                "operator": "regex_contains",
                "operand": "^\\S",
                "match_all": true
            }
        ]
    },
    {
        "keys": [
            "backspace"
        ],
        "command": "run_macro_file",
        "args": {
            "file": "res://Packages/Default/Delete Left Right.sublime-macro"
        },
        "context": [
            {
                "key": "in_brackets",
                "operator": "equal",
                "operand": true,
                "match_all": true
            },
            {
                "key": "preceding_text",
                "operator": "regex_contains",
                "operand": "\\S",
                "match_all": true
            },
            {
                "key": "following_text",
                "operator": "regex_contains",
                "operand": "^",
                "match_all": true
            }
        ]
    },
    {
        "keys": [
            "ctrl+backspace"
        ],
        "command": "delete_whitespace",
        "args": {
            "direction": "both"
        },
        "context": [
            {
                "key": "in_brackets",
                "operator": "equal",
                "operand": true,
                "match_all": true
            }
        ]
    },
    {
        "keys": [
            "ctrl+left"
        ],
        "command": "chain",
        "args": {
            "commands": [
                [
                    "move",
                    {
                        "word_end": true,
                        "by": "stops",
                        "forward": false
                    }
                ],
                [
                    "expand_selection",
                    {
                        "to": "word"
                    }
                ]
            ]
        },
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    {
        "keys": [
            "ctrl+right"
        ],
        "command": "chain",
        "args": {
            "commands": [
                [
                    "move",
                    {
                        "by": "stops",
                        "word_begin": true,
                        "forward": true
                    }
                ],
                [
                    "expand_selection",
                    {
                        "to": "word"
                    }
                ]
            ]
        },
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    {
        "keys": [
            "ctrl+shift+k"
        ],
        "command": "transform_words",
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    {
        "keys": [
            "ctrl+f7"
        ],
        "command": "better_expand_selection_to_scope"
    },
    {
        "keys": [
            "tab"
        ],
        "command": "insert_snippet",
        "args": {
            "contents": " return $0; "
        },
        "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand": "source.js, source.cfml.script",
                "match_all": true
            },
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": false,
                "match_all": true
            },
            {
                "key": "preceding_text",
                "operator": "regex_contains",
                "operand": "function\\s*([\\w$]+\\s*)?\\([^)]*\\)\\s*[{]$",
                "match_all": true
            },
            {
                "key": "following_text",
                "operator": "regex_contains",
                "operand": "^\\}$",
                "match_all": true
            }
        ]
    }
]